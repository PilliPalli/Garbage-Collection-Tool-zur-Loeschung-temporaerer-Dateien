// <auto-generated />
using System;
using Garbage_Collector.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Garbage_Collector.Migrations
{
    [DbContext(typeof(GarbageCollectorDbContext))]
    [Migration("20240903162334_AddCleanupLogsTable")]
    partial class AddCleanupLogsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Garbage_Collector.Model.CleanupLog", b =>
                {
                    b.Property<int>("CleanupLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CleanupLogId"));

                    b.Property<DateTime>("CleanupDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CleanupType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Standard");

                    b.Property<int>("FilesDeleted")
                        .HasColumnType("int");

                    b.Property<double>("SpaceFreedInMb")
                        .HasColumnType("float")
                        .HasColumnName("SpaceFreedInMB");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CleanupLogId")
                        .HasName("PK__CleanupL__33B67D89C437F914");

                    b.HasIndex("UserId");

                    b.ToTable("CleanupLogs");
                });

            modelBuilder.Entity("Garbage_Collector.Model.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1AB4E0B91A");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B6160FAC7BD11")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Garbage_Collector.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C1FCD3355");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Garbage_Collector.Model.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UserRole__3D978A3517636FDC");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Garbage_Collector.Model.CleanupLog", b =>
                {
                    b.HasOne("Garbage_Collector.Model.User", "User")
                        .WithMany("CleanupLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__CleanupLo__UserI__7BE56230");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Garbage_Collector.Model.UserRole", b =>
                {
                    b.HasOne("Garbage_Collector.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__UserRoles__RoleI__7908F585");

                    b.HasOne("Garbage_Collector.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserRoles__UserI__7814D14C");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Garbage_Collector.Model.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Garbage_Collector.Model.User", b =>
                {
                    b.Navigation("CleanupLogs");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
